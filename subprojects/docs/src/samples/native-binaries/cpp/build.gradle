// START SNIPPET apply-plugin
apply plugin: 'cpp'
// END SNIPPET apply-plugin

// START SNIPPET libraries
model {
 	platforms {
		win32 {
			operatingSystem "windows"
			architecture 'x86'
		}
		win64 {
			operatingSystem "windows"
			architecture 'x64'
		}
		linux32 {
			operatingSystem "linux"
			architecture 'x86'
		}
		linux64 {
			operatingSystem "linux"
			architecture 'x64'
		}
	}
   components {
		withType(NativeComponentSpec) {
			targetPlatform "win32"
			targetPlatform "win64"
			targetPlatform "linux32"
			targetPlatform "linux64"
		}
		hello(NativeLibrarySpec)
        main(NativeExecutableSpec) {
            sources {
                cpp {
                    lib library: "hello"
                }
            }
        }
    }
    binaries {
        all {
            // Define a preprocessor macro for every binary
            cppCompiler.define "NDEBUG"

            // Define toolchain-specific compiler and linker options
            if (toolChain in Gcc) {
                cppCompiler.args "-O2", "-fno-access-control"
                linker.args "-Xlinker", "-S"
            }
            if (toolChain in VisualCpp) {
                cppCompiler.args "/Zi"
                linker.args "/DEBUG"
            }
        }
        withType(SharedLibraryBinarySpec) {
            if (toolChain in VisualCpp) {
                cppCompiler.define "DLL_EXPORT"
            }
        }
    }
}
